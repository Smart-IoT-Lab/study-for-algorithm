package skilltest;

/**
 * 문자열 s에는 공백으로 구분된 숫자들이 저장되어 있습니다. str에 나타나는 숫자 중 최소값과 최대값을 찾아 이를 (최소값)
 * (최대값)형태의 문자열을 반환하는 함수, solution을 완성하세요. 예를들어 s가 1 2 3 4라면 1 4를 리턴하고, -1 -2 -3
 * -4라면 -4 -1을 리턴하면 됩니다.
 * 
 * 제한 조건 s에는 둘 이상의 정수가 공백으로 구분되어 있습니다.
 * 
 * ***************************************************************************************
 * 
 * 무인도에 갇힌 사람들을 구명보트를 이용하여 구출하려고 합니다. 구명보트는 작아서 한 번에 최대 2명씩 밖에 탈 수 없고, 무게 제한도
 * 있습니다.
 * 
 * 예를 들어, 사람들의 몸무게가 [70kg, 50kg, 80kg, 50kg]이고 구명보트의 무게 제한이 100kg이라면 2번째 사람과 4번째
 * 사람은 같이 탈 수 있지만 1번째 사람과 3번째 사람의 무게의 합은 150kg이므로 구명보트의 무게 제한을 초과하여 같이 탈 수 없습니다.
 * 
 * 구명보트를 최대한 적게 사용하여 모든 사람을 구출하려고 합니다.
 * 
 * 사람들의 몸무게를 담은 배열 people과 구명보트의 무게 제한 limit가 매개변수로 주어질 때, 모든 사람을 구출하기 위해 필요한
 * 구명보트 개수의 최솟값을 return 하도록 solution 함수를 작성해주세요.
 * 
 * 제한사항 무인도에 갇힌 사람은 1명 이상 50,000명 이하입니다. 각 사람의 몸무게는 40kg 이상 240kg 이하입니다. 구명보트의
 * 무게 제한은 40kg 이상 240kg 이하입니다. 구명보트의 무게 제한은 항상 사람들의 몸무게 중 최댓값보다 크게 주어지므로 사람들을
 * 구출할 수 없는 경우는 없습니다.
 * 
 * @author YR
 *
 */
import java.util.*;

public class Solution {
	public int solution(int[] people, int limit) {
		int answer = 0;
		
		Integer[] reverse = Arrays.stream(people).boxed().toArray( Integer[] ::new);
		Arrays.sort(reverse, Comparator.reverseOrder());

		int[] boat = new int[people.length];
		ArrayList<Integer> leavedWeight = new ArrayList<Integer>();

		boat[0] = 1;
		leavedWeight.add(limit - reverse[0]);

		for (int i = 1; i < people.length; i++) {
			boolean updated = false;
			for (int j=0; j<leavedWeight.size(); j++) {
				if (leavedWeight.get(j) >= reverse[i]) {
					leavedWeight.remove(j);
					boat[i] = boat[i - 1];
					updated = true;
					break;
				}
			}

			if (!updated) {
				boat[i] = boat[i - 1] + 1;
				leavedWeight.add(limit - reverse[i]);
			}
		}

		for (int i : boat)
			System.out.print(i + " ");
		System.out.println();

		for (int i : leavedWeight)
			System.out.print(i + " ");
		System.out.println();

		answer = boat[boat.length - 1];
		return answer;
	}

	public static void main(String[] args) {
		Solution s = new Solution();

		int[] people = { 70, 50, 80, 50, 100, 120, 120 };
		int limit = 200;

		System.out.println(s.solution(people, limit));
	}
}
